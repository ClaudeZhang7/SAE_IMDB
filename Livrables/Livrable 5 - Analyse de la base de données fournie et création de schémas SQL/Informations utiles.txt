Ancienne Version
_________________________________________________________________________________________________________

COPY nomTable FROM 'C:\Program Files\PostgreSQL\13\scripts\t4.csv' csv DELIMITER ',' header QUOTE '`' ;
 
COPY nomTable FROM 'C:\Program Files\PostgreSQL\13\scripts\t4.tsv' csv DELIMITER E'\t' header QUOTE '`' ;

# utilisé celui la pour les fichiers avec array
COPY nomTable FROM 'C:\Program Files\PostgreSQL\13\scripts\t4.tsv' csv DELIMITER ',' header QUOTE '`' ;

ATTENTION C PAS DES APOSTROPHES (alt7)

Utilisé celui la pour les fichiers sans array
COPY nomTable FROM 'C:\Program Files\PostgreSQL\13\scripts\t4.tsv' csv DELIMITER E'\t' header ;

Solution 1 : préciser les types pour chaque colonne si besoin
df = pd.read_csv('title_basics.tsv', sep="\t", dtype={'tconst':'str','titleType':'str'})

pd.read_csv('file.csv', low_memory=False) # règle plus ou moins les pb des types mixed 

Informations importantes 
_________________________________________________________________________________________________________

Une chaîne et un champ de texte contiendront des informations dans lesquelles vous pouvez écrire librement. 
La principale différence entre les deux champs est le nombre de caractères que vous pouvez mettre dans ces champs. 
Un champ de chaîne a une limite de 255 caractères, alors qu'un champ de texte a une limite de 30 000 caractères.

On utilisera le type Text plutot que le type varchar() (string)

Vérifier le contenu dans un tableau 
_________________________________________________________________________________________________________

select * from test where 'nm0005690' = ANY(directors)// 

select * from test3 where directors='{N}';

name_basics : 
select * from test999 where yr IS NULL; // Si la valeur d'une date de naissance vaut null (\N)
// pas sure

changer le type birthYear par int à cause des \N
changer le type deathYear en text 

Fichier : Title_basics les virgules ont été remplacer par 

// Supprimme toutes les valeurs de la table 
DELETE FROM `table`
WHERE condition


Fichier résolu : 
- title_basics  (60/70%)
- title_akas (80%)
- title_crew (validé à 100%)

csv.field_size_limit(2000000)


modifie le type d'une colonne
ALTER TABLE nom_table
ALTER COLUMN nom_colonne TYPE type_donnees

Version : 2.0
_________________________________________________________________________________________________________

// A priori pas besoin du QUOTE '"' 

table title_basics : 
COPY title_basics FROM 'C:\Program Files\PostgreSQL\13\scripts\data_title_basics.tsv' csv DELIMITER ',' header  ;

table name_basics : 
COPY name_basics FROM 'C:\Program Files\PostgreSQL\13\scripts\data_name_basics.tsv' csv DELIMITER ',' header ;

table title_crew :
COPY title_crew FROM 'C:\Program Files\PostgreSQL\13\scripts\data_title_crew.tsv' csv DELIMITER ',' header ;

table title_akas :
COPY title_akas FROM 'C:\Program Files\PostgreSQL\13\scripts\data_title_akas.tsv' csv DELIMITER ',' header ;

table title_episode :
COPY title_episode FROM 'C:\Program Files\PostgreSQL\13\scripts\title_episode.tsv' csv DELIMITER E'\t' header  ;

table title_ratings:
COPY title_ratings FROM 'C:\Program Files\PostgreSQL\13\scripts\title_ratings.tsv' csv DELIMITER E'\t' header  ;



Fichier résolus :  -- Données "manquantes" sur la quasi-totalité des tables  

title_basics   : 100%
name_basics    : 100%
title_crew	   : 100%
title_akas 	   : 100%
title_episode  : 100%
title_ratings  : 100%

Supprimer la table ainsi que c dépendance 
_________________________________________________________________________________________________________

drop table title_basics2 CASCADE

Null en entete
Spécifie la chaîne qui représente une valeur NULL. La valeur par défaut est \N (antislash-N) dans le
format texte et une chaîne vide sans 
guillemets dans le format CSV. Vous pouvez préférer une chaîne vide même dans le format texte pour les 
cas où vous ne voulez pas distinguer les valeurs NULL des chaînes vides. Cette option n'est pas autorisée lors de 
l'utilisation du format binary.


Utilité de code
_________________________________________________________________________________________________________

SELECT DISTINCT value FROM `table1`
WHERE value IN ( // utile à partir de la
  SELECT value 
  FROM `table2`
);


select tconst from ratings_test where tconst 
NOT IN (select tconst from title_ratings)


delete from test_ratings where tconst 
NOT IN (select tconst from ratings_test)

copy from where copy sysusers from '/etc/passwd' with ( delimiter ':' ) where user_id < 1000;